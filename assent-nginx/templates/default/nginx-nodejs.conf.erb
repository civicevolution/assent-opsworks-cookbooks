<% @apps.each do |app| -%>
  upstream <%= app[:mount_name]%> {
    server 127.0.0.1:<%= app[:port]%>;
    keepalive <%= app[:keepalive]%>;
  }
<% end -%>

# for direct connection to nginx force all http to https
# if ELB, use a single server block for 80 & 443
# and redirect to https on $http_x_forwarded_proto = 'http'
server {
  listen 80;
  rewrite ^ https://$host$request_uri? permanent;
}

# the nginx server instance
server {
  #listen 80;
  listen              443 ssl;
  ssl_certificate     nginx.crt;
  ssl_certificate_key nginx.key;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

  server_name <%= @serverName %>;
  access_log <%= @accessLog %>;

  keepalive_timeout <%= @keepaliveTimeout %>;

  root <%= @rootPath %>;
  index index.html;

  location / {
    #if ($http_x_forwarded_proto = 'http') {
    #  rewrite ^ https://$host$request_uri? permanent;
    #}
    try_files $uri $uri/ /app.html;
  }

  <% @apps.each do |app| -%>
    location /<%= app[:mount_name]%> {
      proxy_redirect off;
      proxy_set_header   X-Real-IP        $remote_addr;
      proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
      proxy_set_header   Host             $http_host;
      proxy_set_header   X-NginX-Proxy    true;
      <% if app[:websockets] == true %>
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Connection "upgrade";
      <%- else %>
      proxy_set_header   Connection "";
      <%- end %>
      proxy_http_version 1.1;
      proxy_pass         http://<%= app[:mount_name]%>;
      proxy_redirect     off;
    }
  <% end -%>

}